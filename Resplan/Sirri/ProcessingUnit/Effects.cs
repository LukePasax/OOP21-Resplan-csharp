namespace Resplan.Sirri.ProcessingUnit
{
    /// <summary>
    /// This class is a placeholder for the modelling of compression,
    /// that is an audio signal processing operation which reduces the volume of
    /// loud sounds or amplifies quiet sounds, thus reducing or compressing an audio signal's dynamic range.
    /// </summary>
    public class Compressor : AbstractEffect
    {
        private const string EffectName = "Compressor";

        /// <summary>
        /// Creates a compressor and sets its parameters to the current default.
        /// </summary>
        /// <param name="channels">
        /// The number of inputs and outputs of this effect.
        /// </param>
        public Compressor(int channels) : base(channels, EffectName) {}
    }
    
    /// <summary>
    /// Gate is the term for the audio device designed to reduce background noise coming in from an audio source.
    /// Specifically, a gate parses the audio signal and reduces the volume of all the samples that do not reach
    /// a certain volume threshold.
    /// Gates are usually put at the end of the dynamics section of a processing unit to remove
    /// all the noise generated by compressors.
    /// </summary>
    public class Gate : AbstractEffect
    {
        private const string EffectName = "Gate";
        
        /// <summary>
        /// Creates a gate and sets its parameters to the current default.
        /// </summary>
        /// <param name="channels">
        /// The number of inputs and outputs of this effect.
        /// </param>
        public Gate(int channels) : base(channels, EffectName) {}
    }
    
    /// <summary>
    /// Filtering boosts or attenuates frequencies in a sound, thus modifying the frequency spectrum of that sound.
    /// High pass filters allow the high frequencies to pass while reducing or even eliminating some lower
    /// frequencies.
    /// </summary>
    public class HighPassFilter : AbstractEffect
    {
        private const string EffectName = "High Pass";
        
        /// <summary>
        /// Creates a high-pass filter and sets its cutoff frequency to the given value.
        /// </summary>
        /// <param name="channels">
        /// The number of inputs and outputs of this effect.
        /// </param>
        public HighPassFilter(int channels) : base(channels, EffectName) {}
    }
}